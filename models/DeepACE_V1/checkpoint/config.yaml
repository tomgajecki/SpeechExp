# Directory paths for training, validation, and testing datasets
train_mixture_dir: "../../../../../Datasets/30hLibriVox/train/mixture/"
train_target_dir: "../../../../../Datasets/30hLibriVox/train/targetLGF/"
valid_mixture_dir: "../../../../../Datasets/30hLibriVox/valid/mixture/"
valid_target_dir: "../../../../../Datasets/30hLibriVox/valid/targetLGF/"
test_dir: "C:/Users/Tom/Documents/Projects/CI_Speech_Enhancement/data/test/clean_audio/"

# Training parameters
batch_size: 4             # Number of samples per batch during training
sample_rate: 16000        # Sampling rate of the input audio (in Hz)
segment_length: 4.0       # Length of audio segments to be used during training (in seconds)
learning_rate: 1e-3       # Learning rate for the optimizer
num_epochs: 200           # Number of training epochs
num_workers: 4            # Number of workers for data loading
stim_rate: 1000           # Cochlear implant stimulation rate
base_level: 0.015625      # Cochlear implant base level

# Loss function selection
loss: 'MSE'  # Loss function to use during training. Options include:
                          # "MSE" for Mean Squared Error,
                          # "huber" for Huber loss,
                          # "weighted" for Weighted Feature Loss

delta: 1.0                # Huber delta for Huber-based losses

# DeepACE Model configuration parameters
DeepACE:
  N: 64                  # Number of encoder filters (feature dimension)
  L: 32                    # Length of the convolutional encoder filters
  P: 128                     # Number of channels in the bottleneck layer
  B: 64                   # Number of channels in the intermediate layers of the separation network
  S: 32                   # Number of channels in the skip connections
  H: 128                   # Number of hidden units in the separation network
  X: 2                     # Number of convolutional blocks within each stack
  R: 2                    # Number of stacks of convolutional blocks
  M: 22                    # Number of output channels in the mask estimation layer
  msk_activate: "sigmoid"  # Activation function for the mask output (e.g., sigmoid for mask values between 0 and 1)
  causal: True             # If True, the model only uses past information (non-causal if False)
